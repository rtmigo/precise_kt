name: Gradle Pipe

on:
  push:
    branches: [ dev ]
    paths-ignore:
      - '**.md'
      - '**.txt'

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  release-flag:
    if: contains(github.event.head_commit.message, '!!release')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

  unit-test:
    timeout-minutes: 15

    runs-on: ${{ matrix.os }}
    if: ${{ !contains(github.event.head_commit.message, 'Merge remote-tracking branch') }}

    strategy:
      matrix:
        os: [ ubuntu-latest ] 
        jdk_version: [ 8, 18 ]

    steps:
      - uses: actions/checkout@v2
      - name: Update submodules
        run: git submodule update --init --recursive
      - name: Setup JDK ${{ matrix.jdk_version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.jdk_version }}
          distribution: 'temurin'
          cache: gradle
      - name: Run unit tests
        run: gradle test --no-daemon --info

  test-dev-as-module-from-git:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ] 
    steps:
      - uses: actions/checkout@v2

      - name: Update submodules
        run: git submodule update --init --recursive

      - name: Setup JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: gradle

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Build sample project that uses the library
        run: |
          pip install git+https://github.com/rtmigo/tempground_py
          python test_as_git_module.py dev

  check-version:
    needs: [release-flag]
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.result }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: gradle

      - name: Get the project version
        id: get_version
        run: |
          git fetch --all --tags
          VERSION=$(./gradlew properties | grep version | awk '{print $2}')
          echo "Version $VERSION"
          [[ -z $(git tag -l $VERSION) ]]  # fail if not empty, i.e. if tag exists
          echo "::set-output name=result::$VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  to-staging:
    needs: [ unit-test, test-dev-as-module-from-git ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Merge current -> staging
        uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          target_branch: staging
          github_token: ${{ github.token }}

  to-master:
    needs: [ to-github-release ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Merge to master branch
        uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          target_branch: master
          github_token: ${{ github.token }}

  to-github-release:
    needs: [ to-staging, release-flag, check-version ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Publish GitHub release
        id: publish_github_release
        uses: softprops/action-gh-release@v1
        with:
          
          tag_name: ${{ needs.check-version.outputs.version }}
          files: ./build/libs/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  assert-can-publish-central:
    needs: [release-flag]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check script exists
        run: ls ./publish_to_maven_central.py
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Set up deps
        run: |
          pip install git+https://github.com/rtmigo/rtmaven_py@dev
      - name: Check variables
        run: |
          export GPG_TTY=$(tty)
          rtmaven check
        env:
          MAVEN_GPG_KEY: ${{ secrets.MAVEN_GPG_KEY }}
          MAVEN_GPG_PASSWORD: ${{ secrets.MAVEN_GPG_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}


  to-maven-central-package:
    needs: [ to-github-release, assert-can-publish-central ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: gradle
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Set up deps
        run: |
          pip install git+https://github.com/rtmigo/rtmaven_py@dev
          pip install tempground          

      - name: Publish to Maven Central
        run: |
          export GPG_TTY=$(tty)
          python ./publish_to_maven_central.py
        env:
          MAVEN_GPG_KEY: ${{ secrets.MAVEN_GPG_KEY }}
          MAVEN_GPG_PASSWORD: ${{ secrets.MAVEN_GPG_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
